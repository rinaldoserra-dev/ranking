// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RS.Ranking.Catalog.Infra.Data.EF;

#nullable disable

namespace RS.Ranking.Catalog.Infra.Data.EF.Migrations
{
    [DbContext(typeof(RankingCatalogDbContext))]
    partial class RankingCatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ranking")
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RS.Ranking.Catalog.Domain.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("character varying(10000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.ToTable("Categories", "ranking");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22d4aa78-89f5-449e-9a7c-df6d3f8e9e31"),
                            CreatedAt = new DateTime(2023, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Descrição do eletrônico",
                            IsActive = true,
                            Name = "Eletrônicos"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
